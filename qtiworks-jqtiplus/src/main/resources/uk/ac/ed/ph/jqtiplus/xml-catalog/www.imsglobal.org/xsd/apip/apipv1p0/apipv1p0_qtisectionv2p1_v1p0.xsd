<?xml version = "1.0" encoding = "UTF-8"?>
<xs:schema xmlns="http://www.imsglobal.org/xsd/apip/apipv1p0/qtisection/imsqti_v2p1"
     targetNamespace="http://www.imsglobal.org/xsd/apip/apipv1p0/qtisection/imsqti_v2p1"
     xmlns:xi="http://www.w3.org/2001/XInclude"
     xmlns:m="http://www.w3.org/1998/Math/MathML"
     xmlns:apip="http://www.imsglobal.org/xsd/apip/apipv1p0/imsapip_qtiv1p0"
     xmlns:xs="http://www.w3.org/2001/XMLSchema"
     xmlns:sch="http://purl.oclc.org/dsdl/schematron"
     version="IMS APIP 1.0 QTI 2.1 SECTION"
     elementFormDefault="qualified"
     attributeFormDefault="unqualified">
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.imsglobal.org/xsd/w3/2001/xml.xsd" />
    <xs:import namespace="http://www.w3.org/2001/XInclude" schemaLocation="http://www.imsglobal.org/xsd/w3/2001/XInclude.xsd" />
    <xs:import namespace="http://www.w3.org/1998/Math/MathML" schemaLocation="http://www.w3.org/Math/XMLSchema/mathml2/mathml2.xsd" />
    <xs:import namespace="http://www.imsglobal.org/xsd/apip/apipv1p0/imsapip_qtiv1p0" schemaLocation="http://www.imsglobal.org/profile/apip/apipv1p0/apipv1p0_qtiextv2p1_v1p0.xsd" />

    <xs:annotation>
        <xs:documentation>
            XSD Data File Information
            =========================
            Author:         Colin Smythe
            Date:           31st July, 2012
            Version:        Final 1.0
            Status:         Final Release
            Description:    This is the Platform Specific Model of the APIPv1.0 profile of the IMS QTI v2.1 Information Model.
                            This is the Core Level Profile for APIPv1.0 QTIv2.1 Sections.

            History:        This is the first version of the APIPv1.0 QTIv2.1 Section Profile.

            PROFILE:        This is the "APIP-Section (Core)". THIS IS A PROFILE OF THE BASE SPECIFICATION.
                            The changes to the base specification are:
                            * The schema namespace has been changed to "http://www.imsglobal.org/xsd/apip/apipv1p0/qtisection/imsqti_v2p1".
                            * The schema version has been changed to "IMS APIP 1.0 QTI 2.1 SECTION".
                            * The "AnyN" class/complexType and set of XML attributes have been deleted;
                            * The "AreaMapEntry" class/complexType and set of XML attributes have been deleted;
                            * The "AreaMapping" class/complexType and set of XML attributes have been deleted;
                            * The "AssessmentItem" class/complexType and set of XML attributes have been deleted;
                            * The "AssessmentSectionSelection" class/complexType and set of XML attributes have been deleted;
                            * The "AssessmentTest" class/complexType and set of XML attributes have been deleted;
                            * The "AssociableHotspot" class/complexType and set of XML attributes have been deleted;
                            * The "AssociateInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "BaseValue" class/complexType and set of XML attributes have been deleted;
                            * The "BranchRule" class/complexType and set of XML attributes have been deleted;
                            * The "ChoiceInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "Correct" class/complexType and set of XML attributes have been deleted;
                            * The "CorrectResponse" class/complexType and set of XML attributes have been deleted;
                            * The "CustomInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "CustomOperator" class/complexType and set of XML attributes have been deleted;
                            * The "Date" class/complexType and set of XML attributes have been deleted;
                            * The "DateTime" class/complexType and set of XML attributes have been deleted;
                            * The "Default" class/complexType and set of XML attributes have been deleted;
                            * The "DefaultValue" class/complexType and set of XML attributes have been deleted;
                            * The "DrawingInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "EndAttemptInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "Equal" class/complexType and set of XML attributes have been deleted;
                            * The "EqualRounded" class/complexType and set of XML attributes have been deleted;
                            * The "ExpressionGroup" class/complexType and set of XML attributes have been deleted;
                            * The "ExtendedTextInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "FeedbackBlock" class/complexType and set of XML attributes have been deleted;
                            * The "FeedbackInline" class/complexType and set of XML attributes have been deleted;
                            * The "FieldValue" class/complexType and set of XML attributes have been deleted;
                            * The "Gap" class/complexType and set of XML attributes have been deleted;
                            * The "GapChoice" class/complexType and set of XML attributes have been deleted;
                            * The "GapImg" class/complexType and set of XML attributes have been deleted;
                            * The "GapMatchInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "GapText" class/complexType and set of XML attributes have been deleted;
                            * The "GraphicAssociateInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "GraphicGapMatchInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "GraphicOrderInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "HotspotChoice" class/complexType and set of XML attributes have been deleted;
                            * The "HotspotInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "HotText" class/complexType and set of XML attributes have been deleted;
                            * The "HotTextInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "Index" class/complexType and set of XML attributes have been deleted;
                            * The "InfoControl" class/complexType and set of XML attributes have been deleted;
                            * The "InlineChoice" class/complexType and set of XML attributes have been deleted;
                            * The "InlineChoiceInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "Inside" class/complexType and set of XML attributes have been deleted;
                            * The "InterpolationTable" class/complexType and set of XML attributes have been deleted;
                            * The "InterpolationTableEntry" class/complexType and set of XML attributes have been deleted;
                            * The "ItemBody" class/complexType and set of XML attributes have been deleted;
                            * The "ItemSessionControl" class/complexType and set of XML attributes have been deleted;
                            * The "Logic0toMany" class/complexType and set of XML attributes have been deleted;
                            * The "Logic1toMany" class/complexType and set of XML attributes have been deleted;
                            * The "LogicPair" class/complexType and set of XML attributes have been deleted;
                            * The "LogicSingle" class/complexType and set of XML attributes have been deleted;
                            * The "LookupOutcomeValue" class/complexType and set of XML attributes have been deleted;
                            * The "MapEntry" class/complexType and set of XML attributes have been deleted;
                            * The "Mapping" class/complexType and set of XML attributes have been deleted;
                            * The "MapResponse" class/complexType and set of XML attributes have been deleted;
                            * The "MatchInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "MatchTable" class/complexType and set of XML attributes have been deleted;
                            * The "MatchTableEntry" class/complexType and set of XML attributes have been deleted;
                            * The "MathConstant" class/complexType and set of XML attributes have been deleted;
                            * The "MathOperator" class/complexType and set of XML attributes have been deleted;
                            * The "MediaInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "ModalFeedback" class/complexType and set of XML attributes have been deleted;
                            * The "Number" class/complexType and set of XML attributes have been deleted;
                            * The "NumericExpressionGroup" class/complexType and set of XML attributes have been deleted;
                            * The "NumericLogic1toMany" class/complexType and set of XML attributes have been deleted;
                            * The "Object" class/complexType and set of XML attributes have been deleted;
                            * The "ObjectFlowGroup" class/complexType and set of XML attributes have been deleted;
                            * The "OrderInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "OutcomeCondition" class/complexType and set of XML attributes have been deleted;
                            * The "OutcomeDeclaration" class/complexType and set of XML attributes have been deleted;
                            * The "OutcomeElse" class/complexType and set of XML attributes have been deleted;
                            * The "OutcomeIf" class/complexType and set of XML attributes have been deleted;
                            * The "OutcomeMinMax" class/complexType and set of XML attributes have been deleted;
                            * The "OutcomeProcessing" class/complexType and set of XML attributes have been deleted;
                            * The "OutcomeProcessingFragment" class/complexType and set of XML attributes have been deleted;
                            * The "OutcomeRule" class/complexType and set of XML attributes have been deleted;
                            * The "Param" class/complexType and set of XML attributes have been deleted;
                            * The "PatternMatch" class/complexType and set of XML attributes have been deleted;
                            * The "PositionObjectInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "PositionObjectStage" class/complexType and set of XML attributes have been deleted;
                            * The "PrintedVariable" class/complexType and set of XML attributes have been deleted;
                            * The "Prompt" class/complexType and set of XML attributes have been deleted;
                            * The "RandomFloat" class/complexType and set of XML attributes have been deleted;
                            * The "RandomInteger" class/complexType and set of XML attributes have been deleted;
                            * The "Repeat" class/complexType and set of XML attributes have been deleted;
                            * The "ResponseCondition" class/complexType and set of XML attributes have been deleted;
                            * The "ResponseDeclaration" class/complexType and set of XML attributes have been deleted;
                            * The "ResponseElse" class/complexType and set of XML attributes have been deleted;
                            * The "ResponseIf" class/complexType and set of XML attributes have been deleted;
                            * The "ResponseProcessing" class/complexType and set of XML attributes have been deleted;
                            * The "ResponseProcessingFragment" class/complexType and set of XML attributes have been deleted;
                            * The "ResponseRuleGroup" class/complexType and set of XML attributes have been deleted;
                            * The "RoundTo" class/complexType and set of XML attributes have been deleted;
                            * The "RubricBlockTemplateBlock" class/complexType and set of XML attributes have been deleted;
                            * The "RubricBlockTemplateInline" class/complexType and set of XML attributes have been deleted;
                            * The "SelectPointInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "SetValue" class/complexType and set of XML attributes have been deleted;
                            * The "SimpleAssociableChoice" class/complexType and set of XML attributes have been deleted;
                            * The "SimpleChoice" class/complexType and set of XML attributes have been deleted;
                            * The "SimpleMatchSet" class/complexType and set of XML attributes have been deleted;
                            * The "SliderInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "StatsOperator" class/complexType and set of XML attributes have been deleted;
                            * The "StringMatch" class/complexType and set of XML attributes have been deleted;
                            * The "Substring" class/complexType and set of XML attributes have been deleted;
                            * The "TemplateBlock" class/complexType and set of XML attributes have been deleted;
                            * The "TemplateBlockFeedbackBlock" class/complexType and set of XML attributes have been deleted;
                            * The "TemplateCondition" class/complexType and set of XML attributes have been deleted;
                            * The "TemplateConstraint" class/complexType and set of XML attributes have been deleted;
                            * The "TemplateDeclaration" class/complexType and set of XML attributes have been deleted;
                            * The "TemplateDefault" class/complexType and set of XML attributes have been deleted;
                            * The "TemplateElse" class/complexType and set of XML attributes have been deleted;
                            * The "TemplateIf" class/complexType and set of XML attributes have been deleted;
                            * The "TemplateInline" class/complexType and set of XML attributes have been deleted;
                            * The "TemplateProcessing" class/complexType and set of XML attributes have been deleted;
                            * The "TemplateRuleGroup" class/complexType and set of XML attributes have been deleted;
                            * The "TestFeedback" class/complexType and set of XML attributes have been deleted;
                            * The "TestPart" class/complexType and set of XML attributes have been deleted;
                            * The "TestVariables" class/complexType and set of XML attributes have been deleted;
                            * The "TextEntryInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "UploadInteraction" class/complexType and set of XML attributes have been deleted;
                            * The "Value" class/complexType and set of XML attributes have been deleted;
                            * The "Variable" class/complexType and set of XML attributes have been deleted;
                            * The "VariableMapping" class/complexType and set of XML attributes have been deleted;
                            * The "VariableString" class/complexType and set of XML attributes have been deleted;
                            * The "AssessmentSection" class/complexType has been modified by:-
                              - The "timeLimits" attribute has been prohibited;
                            * The "RubricBlock.Attr" class/complexType has been modified by:-
                              - The "use" attribute class type has been changed to the class "UseType";
                            * The "SectionPart" class/complexType has been modified by:-
                              - The "include" attribute has been prohibited;
                              - The "assessmentSection" attribute has been prohibited;

            License:        IPR, License and Distribution Notices

                            This machine readable file is derived from IMS Global specification IMS Question and Test Interoperability (QTI) Version 2.1
                            found at http://www.imsglobal.org/qti and the original IMS Global schema binding or code base
                            http://www.imsglobal.org/qti.

                            Recipients of this document are requested to submit, with their comments, notification of any
                            relevant patent claims or other intellectual property rights of which they may be aware that might be
                            infringed by the schema binding contained in this document.

                            IMS Global takes no position regarding the validity or scope of any intellectual property or other
                            rights that might be claimed to pertain to the implementation or use of the technology described in this
                            document or the extent to which any license under such rights might or might not be available; neither
                            does it represent that it has made any effort to identify any such rights. Information on IMS Global
                            procedures with respect to rights in IMS Global specifications can be found at the IMS Global Intellectual Property
                            Rights web page: http://www.imsglobal.org/ipr/imsipr_policyFinal.pdf.

                            Copyright (c) IMS Global Learning Consortium 1999-2013. All Rights Reserved.

                            License Notice for Users

                            Users of products or services that include this document are hereby granted a worldwide, royalty-free, 
                            non-exclusive license to use this document. 

                            Distribution Notice for Developers

                            Developers of products or services that are not original incorporators of this document and 
                            have not changed this document, that is, are distributing a software product that incorporates this 
                            document as is from a third-party source other than IMS, are hereby granted permission to copy,
                            display and distribute the contents of this document in any medium for any purpose without fee or 
                            royalty provided that you include this IPR, License and Distribution notice in its entirety on ALL
                            copies, or portions thereof.

                            Developers of products or services that are original incorporators of this document and wish 
                            to provide distribution of this document as is or with modifications and developers of products and 
                            services that are not original incorporators of this document and have changed this document, are
                            required to register with the IMS Global community on the IMS Global website as described in the following two
                            paragraphs:-

                            *  If you wish to distribute this document as is, with no modifications, you are hereby granted 
                               permission to copy, display and distribute the contents of this document in any medium for any 
                               purpose without fee or royalty provided that you include this IPR, License and Distribution notice in
                               its entirety on ALL copies, or portions thereof, that you make and you complete a valid license 
                               registration with IMS and receive an email from IMS granting the license. To register, follow the 
                               instructions on the IMS website: http://www.imsglobal.org/specificationdownload.cfm. Once 
                               registered you are granted permission to transfer unlimited distribution rights of this document for the 
                               purposes of third-party or other distribution of your product or service that incorporates this 
                               document as long as this IPR, License and Distribution notice remains in place in its entirety; 

                            *  If you wish to create and distribute a derived work from this document, you are hereby 
                               granted permission to copy, display and distribute the contents of the derived work in any medium for 
                               any purpose without fee or royalty provided that you include this IPR, License and Distribution 
                               notice in its entirety on ALL copies, or portions thereof, that you make and you complete a valid 
                               profile registration with IMS Global and receive an email from IMS Global granting the license. To register, follow
                               the instructions on the IMS Global website: http://www.imsglobal.org/profile/. Once registered you are 
                               granted permission to transfer unlimited distribution rights of the derived work for the purposes of 
                               third-party or other distribution of your product or service that incorporates the derived work as long 
                               as this IPR, License and Distribution notice remains in place in its entirety. 

                            The limited permissions granted above are perpetual and will not be revoked by IMS Global or its 
                            successors or assigns.

                            THIS SPECIFICATION IS BEING OFFERED WITHOUT ANY WARRANTY WHATSOEVER, AND IN PARTICULAR, ANY WARRANTY OF NONINFRINGEMENT IS
                            EXPRESSLY DISCLAIMED. ANY USE OF THIS SPECIFICATION SHALL BE MADE ENTIRELY AT THE IMPLEMENTERS OWN RISK, AND NEITHER THE CONSORTIUM
                            NOR ANY OF ITS MEMBERS OR SUBMITTERS, SHALL HAVE ANY LIABILITY WHATSOEVER TO ANY IMPLEMENTER OR THIRD PARTY FOR ANY DAMAGES OF
                            ANY NATURE WHATSOEVER, DIRECTLY OR INDIRECTLY, ARISING FROM THE USE OF THIS SPECIFICATION.

            Source UML File Information
            ===========================
            The source file information must be supplied as an XMI file (without diagram layout information).
            The supported UML authoring tools are:
            (a) Poseidon - v6 (and later)

            Source XSLT File Information
            ============================
            XSL Generator:    Specificationv1p0_GenerationToolv1.xsl
            XSLT Processor:   Saxon-HE-9.4.0.4
            Release:          1.0
            Date:             31st March, 2013
            Autogen Engineer: Colin Smythe (IMS Global, UK)
            Autogen Date:     2013-04-30

            IMS Global Auto-generation Binding Tool-kit (I-BAT)
            ===================================================
            This file was auto-generated using the IMS Global Binding Auto-generation Tool-kit (I-BAT).  While every
            attempt has been made to ensure that this tool auto-generates the files correctly, users should be aware
            that this is an experimental tool.  Permission is given to make use of this tool.  IMS Global makes no
            claim on the materials created by third party users of this tool.  Details on how to use this tool
            are contained in the IMS Global "I-BAT" documentation available at the IMS Global web-site:
            http://www.imsglobal.org.

            Tool Copyright:  2012-2013  (c) IMS Global Learning Consortium Inc.  All Rights Reserved.
        </xs:documentation>
    </xs:annotation>

    <xs:annotation>
        <xs:documentation>
            Definition of Schematron Validation Rules
            =========================================
            Author:         Colin Smythe (IMS Global)
            Date:           31st October, 2012
            Version:        1.0
            Status:         Final Release

            Description:    This is the set of Schematron Rules to further enforce the QTIv2.1 Information Model. The rule sets that have been defined are:

                            [RULE SET GENERAL 1] Ensure that certain expressions are NOT used for Response Processing.
                            [RULE SET GENERAL 2] Ensure that the Item, Section, Test and TestPart identifiers are unique.
                            [RULE SET GENERAL 3] Ensure that AssessmentItem Response Declarations are correct.
                            [RULE SET INTERACTION 1] Enforce the correct use the TextEntryInteraction attributes.

                            RULE SET GENERAL 1: Ensure that certain expressions are NOT used for Response Processing. The set of rules are:-
                            * RULE GENERAL 1a-Assertion 1 :- The expression numberCorrect must NOT be used in Response Processing.
                            * RULE GENERAL 1a-Assertion 2 :- The expression numberIncorrect must NOT be used in Response Processing.
                            * RULE GENERAL 1a-Assertion 3 :- The expression numberPresented must NOT be used in Response Processing.
                            * RULE GENERAL 1a-Assertion 4 :- The expression numberResponded must NOT be used in Response Processing.
                            * RULE GENERAL 1a-Assertion 5 :- The expression numberSelected must NOT be used in Response Processing.
                            * RULE GENERAL 1a-Assertion 6 :- The expression outcomeMinimum must NOT be used in Response Processing.
                            * RULE GENERAL 1a-Assertion 7 :- The expression outcomeMaximum must NOT be used in Response Processing.
                            * RULE GENERAL 1a-Assertion 8 :- The expression testVariables must NOT be used in Response Processing.

                            RULE SET GENERAL 2: Ensure that the Item, Section, Test and TestPart identifiers are unique. The set of rules are:-
                            * RULE GENERAL 2a-Assertion 1 :- The AssessmentTest and a TestPart must not have the same unique identifier.
                            * RULE GENERAL 2a-Assertion 2 :- The AssessmentTest and an AssessmentSection must not have the same unique identifier.
                            * RULE GENERAL 2a-Assertion 3 :- The AssessmentTest and a direct child AssessmentSectionRef must not have the same unique identifier.
                            * RULE GENERAL 2a-Assertion 4 :- The AssessmentTest and a descendant AssessmentSectionRef must not have the same unique identifier.
                            * RULE GENERAL 2a-Assertion 5 :- The AssessmentTest and a descendant AssessmentItemRef must not have the same unique identifier.
                            * RULE GENERAL 2b-Assertion 1 :- Two TestParts must not have the same unique identifier.
                            * RULE GENERAL 2b-Assertion 2 :- The TestPart and an AssessmentSection must not have the same unique identifier.
                            * RULE GENERAL 2b-Assertion 3 :- The TestPart and a direct child AssessmentSectionRef must not have the same unique identifier.
                            * RULE GENERAL 2b-Assertion 4 :- The TestPart and a descendant AssessmentSectionRef must not have the same unique identifier.
                            * RULE GENERAL 2b-Assertion 5 :- The TestPart and a descendant AssessmentItemRef must not have the same unique identifier.
                            * RULE GENERAL 2c-Assertion 1 :- Two AssessmentSection children of a TestPart must not have the same unique identifier.
                            * RULE GENERAL 2c-Assertion 2 :- The AssessmentSection and a descendant AssessmentSection must not have the same unique identifier.
                            * RULE GENERAL 2c-Assertion 3 :- The AssessmentSection and a descendant AssessmentSectionRef must not have the same unique identifier.
                            * RULE GENERAL 2c-Assertion 4 :- The AssessmentSection and a descendant AssessmentItemRef must not have the same unique identifier.

                            RULE SET GENERAL 3: Ensure that AssessmentItem Response Declarations are correct. The set of rules are:-
                            * RULE GENERAL 3a-Assertion 1 :- ***To be completed***..

                            RULE SET INTERACTION 1: Enforce the correct use the TextEntryInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 1a-Assertion 1 :- The StringIdentifier and ResponseIdentifier attribute values must not be the same.

            History:        Version 1.0: The first set of schematron rules for the IMS Global QTIv2.1 specification.
        </xs:documentation>

        <xs:appinfo>
            <sch:ns uri="http://www.imsglobal.org/xsd/apip/apipv1p0/qtisection/imsqti_v2p1" prefix="qti" />
            <sch:title>Schematron Validation Rules for QTI Specification v2.1.</sch:title>

                <!-- RULESET ******************************************************************* -->
                <sch:pattern abstract="false" name="RULE SET GENERAL 1">
                    <sch:title>Ensure that certain expressions are NOT used for Response Processing.</sch:title>

                        <!-- The rule for the ["//qti:assessmentItem/qti:responseProcessing"] context has been removed in this profile -->

                </sch:pattern>
                <!-- *************************************************************************** -->

                <!-- RULESET ******************************************************************* -->
                <sch:pattern abstract="false" name="RULE SET GENERAL 2">
                    <sch:title>Ensure that the Item, Section, Test and TestPart identifiers are unique.</sch:title>

                        <!-- The rule for the ["//qti:assessmentTest"] context has been removed in this profile -->

                        <!-- The rule for the ["//qti:assessmentTest/qti:testPart"] context has been removed in this profile -->

                        <!-- The rule for the ["//qti:assessmentTest/qti:testPart/qti:assessmentSection"] context has been removed in this profile -->

                </sch:pattern>
                <!-- *************************************************************************** -->

                <!-- RULESET ******************************************************************* -->
                <sch:pattern abstract="false" name="RULE SET GENERAL 3">
                    <sch:title>Ensure that AssessmentItem Response Declarations are correct.</sch:title>

                        <!-- The rule for the ["//qti:assessmentItem/qti:responseProcessing"] context has been removed in this profile -->

                </sch:pattern>
                <!-- *************************************************************************** -->

                <!-- RULESET ******************************************************************* -->
                <sch:pattern abstract="false" name="RULE SET INTERACTION 1">
                    <sch:title>Enforce the correct use the TextEntryInteraction attributes.</sch:title>

                        <!-- The rule for the ["//qti:textEntryInteraction[@stringIdentifier]"] context has been removed in this profile -->

                </sch:pattern>
                <!-- *************************************************************************** -->

        </xs:appinfo>
    </xs:annotation>

    <!-- Generate Global Attributes (non-assigned) ******************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate Global Attributes *********************************************************************** -->

    <xs:attributeGroup name="class.A.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="href.A.Attr">
        <xs:attribute name="href" use="required" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="id.A.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.A.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="type.A.Attr">
        <xs:attribute name="type" use="optional" type="MimeType.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.A.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.A.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="category.AssessmentItemRef.Attr">
        <xs:attribute name="category" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="fixed.AssessmentItemRef.Attr">
        <xs:attribute name="fixed" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="href.AssessmentItemRef.Attr">
        <xs:attribute name="href" use="required" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.AssessmentItemRef.Attr">
        <xs:attribute name="identifier" use="required" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="required.AssessmentItemRef.Attr">
        <xs:attribute name="required" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="fixed.AssessmentSection.Attr">
        <xs:attribute name="fixed" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.AssessmentSection.Attr">
        <xs:attribute name="identifier" use="required" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="keepTogether.AssessmentSection.Attr">
        <xs:attribute name="keepTogether" use="optional" default="true" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="required.AssessmentSection.Attr">
        <xs:attribute name="required" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="title.AssessmentSection.Attr">
        <xs:attribute name="title" use="required" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="visible.AssessmentSection.Attr">
        <xs:attribute name="visible" use="required" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="href.AssessmentSectionRef.Attr">
        <xs:attribute name="href" use="required" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.AssessmentSectionRef.Attr">
        <xs:attribute name="identifier" use="required" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="cite.BlockQuote.Attr">
        <xs:attribute name="cite" use="optional" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BlockQuote.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BlockQuote.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BlockQuote.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.BlockQuote.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.BlockQuote.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BR.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BR.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BR.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.BR.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.BR.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.Caption.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.Caption.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.Caption.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.Caption.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.Col.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.Col.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.Col.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="span.Col.Attr">
        <xs:attribute name="span" use="optional" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.Col.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.ColGroup.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.ColGroup.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.ColGroup.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="span.ColGroup.Attr">
        <xs:attribute name="span" use="optional" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.ColGroup.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.DD.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.DD.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.DD.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.DD.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.DD.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.Div.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.Div.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.Div.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.Div.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.Div.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.DL.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.DL.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.DL.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.DL.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.DL.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.DT.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.DT.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.DT.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.DT.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.DT.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.HR.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.HR.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.HR.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.HR.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.HR.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.HTMLText.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.HTMLText.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.HTMLText.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.HTMLText.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.HTMLText.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="alt.Img.Attr">
        <xs:attribute name="alt" use="required" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.Img.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="height.Img.Attr">
        <xs:attribute name="height" use="optional" type="Length.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="id.Img.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.Img.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="longdesc.Img.Attr">
        <xs:attribute name="longdesc" use="optional" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="src.Img.Attr">
        <xs:attribute name="src" use="required" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="width.Img.Attr">
        <xs:attribute name="width" use="optional" type="Length.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.Img.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.Img.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.LI.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.LI.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.LI.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.LI.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="extension.Ordering.Attr">
        <xs:anyAttribute namespace = "##other" processContents = "strict" />
    </xs:attributeGroup>

    <xs:attributeGroup name="shuffle.Ordering.Attr">
        <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.OUL.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.OUL.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.OUL.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.OUL.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.OUL.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="cite.Q.Attr">
        <xs:attribute name="cite" use="optional" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.Q.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.Q.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.Q.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.Q.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.Q.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.RubricBlock.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.RubricBlock.Attr">
        <xs:attribute name="id" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.RubricBlock.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="use.RubricBlock.Attr">
        <xs:attribute name="use" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="view.RubricBlock.Attr">
        <xs:attribute name="view" use="required">
            <xs:simpleType>
                <xs:list itemType="View.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.RubricBlock.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.RubricBlock.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="extension.Selection.Attr">
        <xs:anyAttribute namespace = "##other" processContents = "strict" />
    </xs:attributeGroup>

    <xs:attributeGroup name="select.Selection.Attr">
        <xs:attribute name="select" use="required" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="withReplacement.Selection.Attr">
        <xs:attribute name="withReplacement" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="href.StyleSheet.Attr">
        <xs:attribute name="href" use="required" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="media.StyleSheet.Attr">
        <xs:attribute name="media" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="title.StyleSheet.Attr">
        <xs:attribute name="title" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="type.StyleSheet.Attr">
        <xs:attribute name="type" use="required" type="MimeType.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.Table.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.Table.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.Table.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="summary.Table.Attr">
        <xs:attribute name="summary" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmlbase.Table.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.Table.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.TablePart.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.TablePart.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.TablePart.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.TablePart.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="abbr.TDH.Attr">
        <xs:attribute name="abbr" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="align.TDH.Attr">
        <xs:attribute name="align" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="left" />
                    <xs:enumeration value="center" />
                    <xs:enumeration value="right" />
                    <xs:enumeration value="justify" />
                    <xs:enumeration value="char" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="axis.TDH.Attr">
        <xs:attribute name="axis" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.TDH.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="colspan.TDH.Attr">
        <xs:attribute name="colspan" use="optional" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="headers.TDH.Attr">
        <xs:attribute name="headers" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="id.TDH.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.TDH.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="rowspan.TDH.Attr">
        <xs:attribute name="rowspan" use="optional" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="scope.TDH.Attr">
        <xs:attribute name="scope" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="col" />
                    <xs:enumeration value="colgroup" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="valign.TDH.Attr">
        <xs:attribute name="valign" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="bottom" />
                    <xs:enumeration value="middle" />
                    <xs:enumeration value="top" />
                    <xs:enumeration value="baseline" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.TDH.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="allowLateSubmission.TimeLimits.Attr">
        <xs:attribute name="allowLateSubmission" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="maxTime.TimeLimits.Attr">
        <xs:attribute name="maxTime" use="optional" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="minTime.TimeLimits.Attr">
        <xs:attribute name="minTime" use="optional" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.TR.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.TR.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.TR.Attr">
        <xs:attribute name="label" use="optional" type="String256.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="xmllang.TR.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.Weight.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="value.Weight.Attr">
        <xs:attribute name="value" use="required" type="xs:double" />
    </xs:attributeGroup>

    <!-- ================================================================================================== -->

    <!-- Generate Global List Types *********************************************************************** -->

    <xs:simpleType name="IdentifierList.Type">
        <xs:restriction base="xs:NCName" />
    </xs:simpleType>

        <!-- The global list "IntegerList.Type" has been deleted, by deduction, in this profile  ************* -->

    <xs:simpleType name="StringList.Type">
        <xs:restriction base="xs:string" />
    </xs:simpleType>

        <!-- The global list "ToleranceList.Type" has been deleted, by deduction, in this profile  ************* -->

    <xs:simpleType name="View.Type">
        <xs:restriction base="xs:string">
            <xs:enumeration value="author" />
            <xs:enumeration value="candidate" />
            <xs:enumeration value="proctor" />
            <xs:enumeration value="scorer" />
            <xs:enumeration value="testConstructor" />
            <xs:enumeration value="tutor" />
        </xs:restriction>
    </xs:simpleType>

    <!-- ================================================================================================== -->

    <!-- Generate Namespaced extension Group  ************************************************************* -->

    <xs:group name="grpLax.any">
        <xs:annotation>
            <xs:documentation>
                Any namespaced element from any namespace may be included within an "any" element.
                The namespace for the imported element must be defined in the instance, and the schema must be imported.
                The extension has a definition of "lax" i.e. they can reuse elements from the target namespace.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:any namespace = "##other" processContents = "lax" minOccurs = "0" maxOccurs = "unbounded" />
        </xs:sequence>
    </xs:group>

    <!-- ================================================================================================== -->

    <!-- Generate Special DataTypes  ********************************************************************** -->

    <xs:complexType name="EmptyPrimitiveType.Type">
        <xs:complexContent>
            <xs:restriction base="xs:anyType" />
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Generate the enumerated simpleType declarations ************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Parameter) ***************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Derived) ******************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Union) ********************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Complex) ******************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon simpleType ************************************ -->

    <xs:simpleType name="EncVariableString.Type">
        <xs:restriction base="xs:string">
            <xs:pattern value="\{[\i-[:]][\c-[:]]*\}" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Identifier.Type">
        <xs:restriction base="xs:NCName" />
    </xs:simpleType>

    <xs:simpleType name="Length.Type">
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]+%?" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="MimeType.Type">
        <xs:restriction base="xs:normalizedString">
            <xs:pattern value="[\p{IsBasicLatin}-[()&lt;&gt;@,;:\\&quot;/\[\]?=]]+/[\p{IsBasicLatin}-[()&lt;&gt;@,;:\\&quot;/\[\]?=]]+" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="String256.Type">
        <xs:restriction base="xs:string">
            <xs:maxLength value="256" />
            <xs:whiteSpace value="preserve" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="UniqueIdentifier.Type">
        <xs:restriction base="xs:ID" />
    </xs:simpleType>

        <!-- The simpleType-based DerivedType "UniqueIdentifierRef.Type" has been deleted, by deduction, in this profile  ************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon derived simpleType **************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the ComplexTypes ************************************************************************ -->

    <xs:complexType name="A.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'A' complexType is the container for content that is equivalent to the HTML 'a' markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="m:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.A.Attr" />
        <xs:attributeGroup ref="class.A.Attr" />
        <xs:attributeGroup ref="xmllang.A.Attr" />
        <xs:attributeGroup ref="label.A.Attr" />
        <xs:attributeGroup ref="xmlbase.A.Attr" />
        <xs:attributeGroup ref="href.A.Attr" />
        <xs:attributeGroup ref="type.A.Attr" />
    </xs:complexType>

    <xs:complexType name="AssessmentItemRef.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for referential link to the externally stored AssessmentItem (each such Item is stored in its own XML instance file). The identifier attribute should be used to identify the actual Item. The details for the Item provided at this point enable the associated Test/Section to determine if the Item fulfills any prerequisites.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="timeLimits" minOccurs="0" maxOccurs="1" />
            <xs:element ref="weight" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="identifier.AssessmentItemRef.Attr" />
        <xs:attributeGroup ref="required.AssessmentItemRef.Attr" />
        <xs:attributeGroup ref="fixed.AssessmentItemRef.Attr" />
        <xs:attributeGroup ref="href.AssessmentItemRef.Attr" />
        <xs:attributeGroup ref="category.AssessmentItemRef.Attr" />
    </xs:complexType>

    <xs:complexType name="AssessmentSection.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A Test consists of one or more Sections. An 'assessmentSection' is the binding form of a Section. More significantly, a Section is an aggregation of assessmentItems i.e. a set of Items that are used to achieve some co-ordnated assessment activity. An assessmentSection contains the rules that should be used to select and order the set of associated Sections and/or Items. Furthermore, the associated rubricBlock is used to present content that is relevant to all of the contained Sections and/or Items.
                [APIP-Section (Core)] Profile - the changes to the XML element list are:
                * The "timeLimits" element has been prohibited;
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="selection" minOccurs="0" maxOccurs="1" />
            <xs:element ref="ordering" minOccurs="0" maxOccurs="1" />
            <xs:element ref="rubricBlock" minOccurs="0" maxOccurs="unbounded" />
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="assessmentItemRef" minOccurs="1" maxOccurs="1" />
                <xs:element ref="assessmentSectionRef" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="identifier.AssessmentSection.Attr" />
        <xs:attributeGroup ref="required.AssessmentSection.Attr" />
        <xs:attributeGroup ref="fixed.AssessmentSection.Attr" />
        <xs:attributeGroup ref="title.AssessmentSection.Attr" />
        <xs:attributeGroup ref="visible.AssessmentSection.Attr" />
        <xs:attributeGroup ref="keepTogether.AssessmentSection.Attr" />
    </xs:complexType>

    <xs:complexType name="BlockQuote.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'BlockQuote' complexType is the container for content that is equivalent to the HTML 'blockquote' markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="m:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.BlockQuote.Attr" />
        <xs:attributeGroup ref="class.BlockQuote.Attr" />
        <xs:attributeGroup ref="xmllang.BlockQuote.Attr" />
        <xs:attributeGroup ref="label.BlockQuote.Attr" />
        <xs:attributeGroup ref="xmlbase.BlockQuote.Attr" />
        <xs:attributeGroup ref="cite.BlockQuote.Attr" />
    </xs:complexType>

    <xs:complexType name="Caption.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'Caption' complexType is the container for content that is equivalent to the HTML 'caption' markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="m:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.Caption.Attr" />
        <xs:attributeGroup ref="class.Caption.Attr" />
        <xs:attributeGroup ref="xmllang.Caption.Attr" />
        <xs:attributeGroup ref="label.Caption.Attr" />
    </xs:complexType>

    <xs:complexType name="ColGroup.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'ColGroup' complexType is the container for set of columns defined within a table. The content is the set of 'col' HTML markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="col" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="id.ColGroup.Attr" />
        <xs:attributeGroup ref="class.ColGroup.Attr" />
        <xs:attributeGroup ref="xmllang.ColGroup.Attr" />
        <xs:attributeGroup ref="label.ColGroup.Attr" />
        <xs:attributeGroup ref="span.ColGroup.Attr" />
    </xs:complexType>

    <xs:complexType name="DD.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'DD' complexType is the container for term definitions as per the HTML 'dd' markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="m:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.DD.Attr" />
        <xs:attributeGroup ref="class.DD.Attr" />
        <xs:attributeGroup ref="xmllang.DD.Attr" />
        <xs:attributeGroup ref="label.DD.Attr" />
        <xs:attributeGroup ref="xmlbase.DD.Attr" />
    </xs:complexType>

    <xs:complexType name="Div.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'Div' complexType is the container for content that is equivalent to the HTML 'div' markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="m:math" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.Div.Attr" />
        <xs:attributeGroup ref="class.Div.Attr" />
        <xs:attributeGroup ref="xmllang.Div.Attr" />
        <xs:attributeGroup ref="label.Div.Attr" />
        <xs:attributeGroup ref="xmlbase.Div.Attr" />
    </xs:complexType>

    <xs:complexType name="DL.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'DL' complexType is the container for list definitions as per the HTML 'dl' markup. This can contain any combination of 'dd' and 'dt' HTML elements.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="dd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="dt" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.DL.Attr" />
        <xs:attributeGroup ref="class.DL.Attr" />
        <xs:attributeGroup ref="xmllang.DL.Attr" />
        <xs:attributeGroup ref="label.DL.Attr" />
        <xs:attributeGroup ref="xmlbase.DL.Attr" />
    </xs:complexType>

    <xs:complexType name="DT.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'DT' complexType is the container for term definitions as per the HTML 'dt' markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="m:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.DT.Attr" />
        <xs:attributeGroup ref="class.DT.Attr" />
        <xs:attributeGroup ref="xmllang.DT.Attr" />
        <xs:attributeGroup ref="label.DT.Attr" />
        <xs:attributeGroup ref="xmlbase.DT.Attr" />
    </xs:complexType>

    <xs:complexType name="HTMLText.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The complexType for the set of HTML text elements i.e. h1, h2, h3, h4, h5, h6, p, pre and address.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="m:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.HTMLText.Attr" />
        <xs:attributeGroup ref="class.HTMLText.Attr" />
        <xs:attributeGroup ref="xmllang.HTMLText.Attr" />
        <xs:attributeGroup ref="label.HTMLText.Attr" />
        <xs:attributeGroup ref="xmlbase.HTMLText.Attr" />
    </xs:complexType>

    <xs:complexType name="LI.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'LI' complexType is the container for the definition of lists as per the HTML 'li' markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="m:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.LI.Attr" />
        <xs:attributeGroup ref="class.LI.Attr" />
        <xs:attributeGroup ref="xmllang.LI.Attr" />
        <xs:attributeGroup ref="label.LI.Attr" />
    </xs:complexType>

    <xs:complexType name="Ordering.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the ordering rules to be applied when determining the order in which the selected AssessmentSections and AssessmentItems are to be presented. At present this is an open, namespaced, extension point. Feedback on what proprietary features are used is welcomed.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:group ref="grpLax.any" />
        </xs:sequence>
        <xs:attributeGroup ref="shuffle.Ordering.Attr" />
        <xs:attributeGroup ref="extension.Ordering.Attr" />
    </xs:complexType>

    <xs:complexType name="OUL.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'OUL' complexType is the container for ordered and unordered lists as per the HTML 'ul' and 'ol' markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="li" type="LI.Type" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="id.OUL.Attr" />
        <xs:attributeGroup ref="class.OUL.Attr" />
        <xs:attributeGroup ref="xmllang.OUL.Attr" />
        <xs:attributeGroup ref="label.OUL.Attr" />
        <xs:attributeGroup ref="xmlbase.OUL.Attr" />
    </xs:complexType>

    <xs:complexType name="Q.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'Q' complexType is the container for content that is equivalent to the HTML 'q' markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="m:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.Q.Attr" />
        <xs:attributeGroup ref="class.Q.Attr" />
        <xs:attributeGroup ref="xmllang.Q.Attr" />
        <xs:attributeGroup ref="label.Q.Attr" />
        <xs:attributeGroup ref="xmlbase.Q.Attr" />
        <xs:attributeGroup ref="cite.Q.Attr" />
    </xs:complexType>

    <xs:complexType name="RubricBlock.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                A rubric block identifies instructions to one or more of the actors that view the item or set of items (as per a section). Although rubric blocks are defined as simpleBlocks they must not contain interactions. The visibility of nested bodyElements or rubricBlocks is determined by the outermost element. In other words, if an element is determined to be hidden then all of its content is hidden including conditionally visible elements for which the conditions are satisfied and that therefore would otherwise be visible.
                [APIP-Section (Core)] Profile - the changes to the XML attribute list are:
                * The "use" attribute class type has been changed to the class "UseType";
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                </xs:choice>
                <xs:element ref="m:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
            </xs:choice>
            <xs:element ref="stylesheet" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="apip:apipAccessibility" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attributeGroup ref="id.RubricBlock.Attr" />
        <xs:attributeGroup ref="class.RubricBlock.Attr" />
        <xs:attribute name="use" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="scoringguidance" />
                    <xs:enumeration value="sharedstimulus" />
                    <xs:enumeration value="instruction" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attributeGroup ref="xmllang.RubricBlock.Attr" />
        <xs:attributeGroup ref="label.RubricBlock.Attr" />
        <xs:attributeGroup ref="xmlbase.RubricBlock.Attr" />
        <xs:attributeGroup ref="view.RubricBlock.Attr" />
    </xs:complexType>

    <xs:complexType name="Selection.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the selection rules to be applied when selecting the enclosed AssessmentSections and AssessmentItems. At present this is an open, namespaced, extension point. Feedback on what proprietary features are used is welcomed.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:group ref="grpLax.any" />
        </xs:sequence>
        <xs:attributeGroup ref="select.Selection.Attr" />
        <xs:attributeGroup ref="withReplacement.Selection.Attr" />
        <xs:attributeGroup ref="extension.Selection.Attr" />
    </xs:complexType>

    <xs:complexType name="Table.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'Table' complexType is the container for content that is equivalent to the HTML 'table' markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="caption" minOccurs="0" maxOccurs="1" />
            <xs:element ref="col" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="colgroup" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="thead" minOccurs="0" maxOccurs="1" />
            <xs:element ref="tfoot" minOccurs="0" maxOccurs="1" />
            <xs:element ref="tbody" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="id.Table.Attr" />
        <xs:attributeGroup ref="class.Table.Attr" />
        <xs:attributeGroup ref="xmllang.Table.Attr" />
        <xs:attributeGroup ref="label.Table.Attr" />
        <xs:attributeGroup ref="xmlbase.Table.Attr" />
        <xs:attributeGroup ref="summary.Table.Attr" />
    </xs:complexType>

    <xs:complexType name="TablePart.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The TablePart complexType is the container for set of table row content that is used to the support content within a table.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="tr" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="id.TablePart.Attr" />
        <xs:attributeGroup ref="class.TablePart.Attr" />
        <xs:attributeGroup ref="xmllang.TablePart.Attr" />
        <xs:attributeGroup ref="label.TablePart.Attr" />
    </xs:complexType>

    <xs:complexType name="TDH.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'TDH' complexType is the container for content that is equivalent to the HTML 'td' and 'th' markup within a table.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="m:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.TDH.Attr" />
        <xs:attributeGroup ref="class.TDH.Attr" />
        <xs:attributeGroup ref="xmllang.TDH.Attr" />
        <xs:attributeGroup ref="label.TDH.Attr" />
        <xs:attributeGroup ref="headers.TDH.Attr" />
        <xs:attributeGroup ref="scope.TDH.Attr" />
        <xs:attributeGroup ref="abbr.TDH.Attr" />
        <xs:attributeGroup ref="axis.TDH.Attr" />
        <xs:attributeGroup ref="rowspan.TDH.Attr" />
        <xs:attributeGroup ref="colspan.TDH.Attr" />
        <xs:attributeGroup ref="align.TDH.Attr" />
        <xs:attributeGroup ref="valign.TDH.Attr" />
    </xs:complexType>

    <xs:complexType name="TR.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'TR' complexType is the container for content that is equivalent to the HTML 'tr' markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="td" minOccurs="1" maxOccurs="1" />
                <xs:element ref="th" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.TR.Attr" />
        <xs:attributeGroup ref="class.TR.Attr" />
        <xs:attributeGroup ref="xmllang.TR.Attr" />
        <xs:attributeGroup ref="label.TR.Attr" />
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Generate the derived ComplexTypes **************************************************************** -->

    <xs:complexType name="AssessmentSectionRef.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for referential link to an externally stored AssessmentSection (each such Section is stored in its own XML instance file). The identifier attribute should be used to identify the actual Section.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="identifier.AssessmentSectionRef.Attr" />
                <xs:attributeGroup ref="href.AssessmentSectionRef.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BR.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'BR' complexType is the container for content that is equivalent to the HTML 'br' markup.This ComplexType is intentionally empty.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="id.BR.Attr" />
                <xs:attributeGroup ref="class.BR.Attr" />
                <xs:attributeGroup ref="xmllang.BR.Attr" />
                <xs:attributeGroup ref="label.BR.Attr" />
                <xs:attributeGroup ref="xmlbase.BR.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Col.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'Col' complexType is the container for content that is equivalent to the HTML 'col' markup.This ComplexType is intentionally empty.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="id.Col.Attr" />
                <xs:attributeGroup ref="class.Col.Attr" />
                <xs:attributeGroup ref="xmllang.Col.Attr" />
                <xs:attributeGroup ref="label.Col.Attr" />
                <xs:attributeGroup ref="span.Col.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HR.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'HR' complexType is the container for content that is equivalent to the HTML 'hr' markup.This complexType is intentionally empty.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="id.HR.Attr" />
                <xs:attributeGroup ref="class.HR.Attr" />
                <xs:attributeGroup ref="xmllang.HR.Attr" />
                <xs:attributeGroup ref="label.HR.Attr" />
                <xs:attributeGroup ref="xmlbase.HR.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Img.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'Img' complexType is the container for content that is equivalent to the HTML 'img' markup.This ComplexType is intentionally empty.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="id.Img.Attr" />
                <xs:attributeGroup ref="class.Img.Attr" />
                <xs:attributeGroup ref="xmllang.Img.Attr" />
                <xs:attributeGroup ref="label.Img.Attr" />
                <xs:attributeGroup ref="xmlbase.Img.Attr" />
                <xs:attributeGroup ref="src.Img.Attr" />
                <xs:attributeGroup ref="alt.Img.Attr" />
                <xs:attributeGroup ref="longdesc.Img.Attr" />
                <xs:attributeGroup ref="height.Img.Attr" />
                <xs:attributeGroup ref="width.Img.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="StyleSheet.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is used to associate an external stylesheet (it is assumed that this takes the form of a CSS file but other formats are permitted).
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="href.StyleSheet.Attr" />
                <xs:attributeGroup ref="type.StyleSheet.Attr" />
                <xs:attributeGroup ref="media.StyleSheet.Attr" />
                <xs:attributeGroup ref="title.StyleSheet.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TimeLimits.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                In the context of a specific assessmentTest an item, or group of items, may be subject to a time constraint. The QTI specification supports both minimum and maximum time constraints. The controlled time for a single item is simply the duration of the item session as defined by the builtin response variable duration. For assessmentSections, testParts and whole assessmentTests the time limits relate to the durations of all the item sessions plus any other time spent navigating that part of the test. In other words, the time includes time spent in states where no item is being interacted with, such as dedicated navigation screens. This complexType is intentionally empty.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="minTime.TimeLimits.Attr" />
                <xs:attributeGroup ref="maxTime.TimeLimits.Attr" />
                <xs:attributeGroup ref="allowLateSubmission.TimeLimits.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Weight.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The Weight complexType stores the weighting information. The contribution of an individual item score to an overall test score typically varies from test to test. The score of the item is said to be weighted. Weights are defined as part of each reference to an item (assessmentItemRef) within a test.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="identifier.Weight.Attr" />
                <xs:attributeGroup ref="value.Weight.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Complex) ************************************************************ -->

    <xs:element name="a" type="A.Type" />

    <xs:element name="abbr" type="HTMLText.Type" />

    <xs:element name="acronym" type="HTMLText.Type" />

    <xs:element name="address" type="HTMLText.Type" />

    <xs:element name="assessmentItemRef" type="AssessmentItemRef.Type" />

    <xs:element name="b" type="HTMLText.Type" />

    <xs:element name="big" type="HTMLText.Type" />

    <xs:element name="blockquote" type="BlockQuote.Type" />

    <xs:element name="caption" type="Caption.Type" />

    <xs:element name="cite" type="HTMLText.Type" />

    <xs:element name="code" type="HTMLText.Type" />

    <xs:element name="colgroup" type="ColGroup.Type" />

    <xs:element name="dd" type="DD.Type" />

    <xs:element name="dfn" type="HTMLText.Type" />

    <xs:element name="div" type="Div.Type" />

    <xs:element name="dl" type="DL.Type" />

    <xs:element name="dt" type="DT.Type" />

    <xs:element name="em" type="HTMLText.Type" />

    <xs:element name="h1" type="HTMLText.Type" />

    <xs:element name="h2" type="HTMLText.Type" />

    <xs:element name="h3" type="HTMLText.Type" />

    <xs:element name="h4" type="HTMLText.Type" />

    <xs:element name="h5" type="HTMLText.Type" />

    <xs:element name="h6" type="HTMLText.Type" />

    <xs:element name="i" type="HTMLText.Type" />

    <xs:element name="kbd" type="HTMLText.Type" />

    <xs:element name="ol" type="OUL.Type" />

    <xs:element name="ordering" type="Ordering.Type" />

    <xs:element name="p" type="HTMLText.Type" />

    <xs:element name="pre" type="HTMLText.Type" />

    <xs:element name="q" type="Q.Type" />

    <xs:element name="rubricBlock" type="RubricBlock.Type" />

    <xs:element name="samp" type="HTMLText.Type" />

    <xs:element name="selection" type="Selection.Type" />

    <xs:element name="small" type="HTMLText.Type" />

    <xs:element name="span" type="HTMLText.Type" />

    <xs:element name="strong" type="HTMLText.Type" />

    <xs:element name="sub" type="HTMLText.Type" />

    <xs:element name="sup" type="HTMLText.Type" />

    <xs:element name="table" type="Table.Type" />

    <xs:element name="tbody" type="TablePart.Type" />

    <xs:element name="td" type="TDH.Type" />

    <xs:element name="tfoot" type="TablePart.Type" />

    <xs:element name="th" type="TDH.Type" />

    <xs:element name="thead" type="TablePart.Type" />

    <xs:element name="tr" type="TR.Type" />

    <xs:element name="tt" type="HTMLText.Type" />

    <xs:element name="ul" type="OUL.Type" />

    <xs:element name="var" type="HTMLText.Type" />

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Derived) ************************************************************ -->

    <xs:element name="assessmentSectionRef" type="AssessmentSectionRef.Type" />

    <xs:element name="br" type="BR.Type" />

    <xs:element name="col" type="Col.Type" />

    <xs:element name="hr" type="HR.Type" />

    <xs:element name="img" type="Img.Type" />

    <xs:element name="stylesheet" type="StyleSheet.Type" />

    <xs:element name="timeLimits" type="TimeLimits.Type" />

    <xs:element name="weight" type="Weight.Type" />

    <!-- ================================================================================================== -->

    <!-- Declaration of the root element(s) *************************************************************** -->

    <xs:element name="assessmentSection" type="AssessmentSection.Type" />

    <!-- ================================================================================================== -->

</xs:schema>
